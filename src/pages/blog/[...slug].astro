---
import { type CollectionEntry } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { render } from 'astro:content';
import { getPosts, getPostBaseSlug, getAlternateUrl } from '../../consts';

export async function getStaticPaths() {
  const zhPosts = await getPosts('blog', 'zh');
  const enPosts = await getPosts('blog', 'en');

  return [
    // 中文路由（默认，无后缀）
    ...zhPosts.map((post) => ({
      params: { slug: getPostBaseSlug(post.filePath || '') + '-zh' },
      props: { post, language: 'zh' },
    })),
    // 英文路由（-en 后缀）
    ...enPosts.map((post) => ({
      params: { slug: `${getPostBaseSlug(post.filePath || '')}` },
      props: { post, language: 'en' },
    })),
  ];
}

type Props = {
  post: CollectionEntry<'blog'>;
  language: string;
};

const { post, language } = Astro.props;
const { Content } = await render(post);

// 生成语言切换链接
const currentSlug = Astro.params.slug as string;
const alternateUrl = getAlternateUrl(currentSlug, '/blog');
---

<BlogPost {...post.data} language={language} alternateUrl={alternateUrl}>
  <Content />
</BlogPost>
