---
import BaseItems from '../components/BaseItems.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import { getPosts, getCurrentLanguage } from '../consts';
import { useTranslations } from '../i18n';

const currentLang = getCurrentLanguage(Astro.url);
const t = useTranslations(currentLang as 'zh' | 'en');

const blogPosts = await getPosts('blog', currentLang, 2);
const rustzenPosts = await getPosts('rustzenAdmin', currentLang, 2);
---

<BaseLayout title={t('site.title')} description={t('site.description')}>
  <main class="max-w-4xl mx-auto px-4 py-8">
    <!-- Hero Section -->
    <section class="hero-section mb-12">
      <h1 class="hero-title">{t('hero.greeting')}</h1>
      <p class="hero-description">
        {
          t('hero.description')
            .replace('{rust}', '<span class="highlight">Rust</span>')
            .replace('{react}', '<span class="highlight">React</span>')
            .replace(
              '{rustzen}',
              `<a href="${currentLang === 'en' ? '/en' : ''}/rustzen-admin" class="hero-link">Rustzen Admin</a>`,
            )
        }
      </p>
      <div class="hero-stats">
        <div class="stat-item">
          <span class="stat-number"
            >{blogPosts.length + rustzenPosts.length}</span
          >
          <span class="stat-label">{t('hero.stats.articles')}</span>
        </div>
        <div class="stat-item">
          <span class="stat-number">2</span>
          <span class="stat-label">{t('hero.stats.projects')}</span>
        </div>
        <div class="stat-item">
          <span class="stat-number">‚àû</span>
          <span class="stat-label">{t('hero.stats.possibilities')}</span>
        </div>
      </div>
    </section>

    <!-- Rustzen Admin Áõ∏ÂÖ≥ÊñáÁ´† -->
    {
      rustzenPosts.length > 0 && (
        <section class="mb-12">
          <h2 class="section-title">{t('section.rustzen.title')}</h2>
          <BaseItems posts={rustzenPosts} path="rustzen-admin" />
        </section>
      )
    }

    <!-- ÊôÆÈÄöÂçöÂÆ¢ÊñáÁ´† -->
    {
      blogPosts.length > 0 && (
        <section class="mb-12">
          <h2 class="section-title">{t('section.blog.title')}</h2>
          <BaseItems posts={blogPosts} path="blog" />
        </section>
      )
    }

    <!-- <h2 class="mt-10 mb-4 font-semibold">üß± È°πÁõÆÂ±ïÁ§∫</h2>
    üëâ <a
      href="/rustzen-admin"
      class="text-blue-600 underline hover:no-underline"
    >
      Rustzen Admin È°πÁõÆ‰ªãÁªçÈ°µÈù¢
    </a> -->
  </main>
</BaseLayout>

<style>
  .hero-section {
    text-align: center;
    padding: 2rem 0;
    background: linear-gradient(
      135deg,
      rgba(var(--accent), 0.05),
      rgba(var(--accent-dark), 0.05)
    );
    border-radius: 16px;
    border: 1px solid rgba(var(--accent), 0.1);
  }

  .hero-title {
    font-size: 3rem;
    font-weight: 700;
    margin: 0 0 1rem 0;
    background: linear-gradient(
      135deg,
      rgb(var(--accent)),
      rgb(var(--accent-dark))
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: fadeInUp 0.8s ease-out;
  }

  .hero-description {
    font-size: 1.25rem;
    line-height: 1.6;
    color: rgb(var(--gray-dark));
    margin: 0 0 2rem 0;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
    animation: fadeInUp 0.8s ease-out 0.2s both;
  }

  .hero-description :global(.highlight) {
    color: rgb(var(--accent));
    font-weight: 600;
    position: relative;
  }

  .hero-description :global(.highlight::after) {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, rgb(var(--accent)), transparent);
    border-radius: 1px;
  }

  .hero-description :global(.hero-link) {
    color: rgb(var(--accent));
    text-decoration: none;
    font-weight: 600;
    border-bottom: 2px solid rgba(var(--accent), 0.3);
    transition: all 0.2s ease;
  }

  .hero-description :global(.hero-link:hover) {
    border-bottom-color: rgb(var(--accent));
    color: rgb(var(--accent-dark));
  }

  .hero-stats {
    display: flex;
    justify-content: center;
    gap: 3rem;
    animation: fadeInUp 0.8s ease-out 0.4s both;
  }

  .stat-item {
    text-align: center;
  }

  .stat-number {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    color: rgb(var(--accent));
    line-height: 1;
  }

  .stat-label {
    display: block;
    font-size: 0.875rem;
    color: rgb(var(--gray));
    margin-top: 0.25rem;
  }

  .section-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: rgb(var(--black));
    margin: 0 0 1.5rem 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .section-title::after {
    content: '';
    flex: 1;
    height: 1px;
    background: linear-gradient(90deg, rgba(var(--accent), 0.3), transparent);
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.5rem;
    }

    .hero-description {
      font-size: 1.125rem;
    }

    .hero-stats {
      gap: 2rem;
    }

    .stat-number {
      font-size: 1.5rem;
    }
  }

  @media (max-width: 480px) {
    .hero-section {
      padding: 1.5rem;
    }

    .hero-stats {
      flex-direction: column;
      gap: 1rem;
    }
  }
</style>
