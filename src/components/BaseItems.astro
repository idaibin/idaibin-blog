---
import { type CollectionEntry } from 'astro:content';
import FormattedDate from './FormattedDate.astro';
import { getCurrentLanguage } from '../consts';

export interface Props {
  posts: CollectionEntry<'rustzenAdmin' | 'blog'>[];
  path: string;
}

const { posts, path } = Astro.props;
const currentLang = getCurrentLanguage(Astro.url);
const prefix = currentLang === 'en' ? `en/${path}` : path;

// // ÁîüÊàêÊñáÁ´†ÈìæÊé•ÁöÑÂáΩÊï∞
// const getPostLink = (post: any, path: string, currentLang: string) => {
//   const slug = post.id.replace(/\.(zh|en)$/, ''); // ÁßªÈô§ËØ≠Ë®ÄÂêéÁºÄ
//   if (currentLang === 'en') {
//     return `/en/${path}/${slug}/`;
//   }
//   return `/${path}/${slug}/`;
// };
---

<ul class="posts-grid">
  {
    posts.map((post) => (
      <li class="post-card">
        <a href={`/${prefix}/${post.id}/`} class="post-link">
          <div class="post-header">
            <h3 class="post-title">{post.data.title}</h3>
            {'pubDate' in post.data && post.data.pubDate && (
              <p class="post-date">
                <FormattedDate date={post.data.pubDate} />
              </p>
            )}
          </div>

          <p class="post-description">{post.data.description}</p>

          {post.data.tags && (
            <div class="post-tags">
              {post.data.tags.split(',').map((tag) => (
                <span class="tag">#{tag.trim()}</span>
              ))}
            </div>
          )}
        </a>
      </li>
    ))
  }
</ul>

<style>
  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 1.5rem;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .post-card {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    border: 1px solid rgba(0, 0, 0, 0.05);
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
  }

  @media (prefers-color-scheme: dark) {
    .post-card {
      background: rgba(255, 255, 255, 0.03);
      border-color: rgba(255, 255, 255, 0.1);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    }

    .post-card:hover {
      background: rgba(255, 255, 255, 0.05);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
    }
  }

  .post-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    border-color: rgba(var(--accent), 0.2);
  }

  .post-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(
      90deg,
      rgb(var(--accent)),
      rgb(var(--accent-dark))
    );
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  .post-card:hover::before {
    transform: scaleX(1);
  }

  .post-link {
    display: block;
    padding: 1.5rem;
    text-decoration: none;
    color: inherit;
    height: 100%;
  }

  .post-header {
    margin-bottom: 1rem;
  }

  .post-title {
    margin: 0 0 0.75rem 0;
    color: rgb(var(--black));
    font-size: 1.25rem;
    font-weight: 600;
    line-height: 1.4;
    transition: color 0.2s ease;
  }

  .post-card:hover .post-title {
    color: rgb(var(--accent));
  }

  .post-date {
    color: rgb(var(--gray));
    font-size: 0.875rem;
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.5top;
  }
  1.post-date::before {
    content: 'üìÖ';
    font-size: 0.75rem;
  }

  .post-description {
    margin: 0 0 1rem 0;
    color: rgb(var(--gray-dark));
    font-size: 0.95rem;
    line-height: 1.6;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .post-tags {
    margin-bottom: -0.5rem;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background: rgba(var(--accent), 0.1);
    color: rgb(var(--accent));
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 500;
    border: 1px solid rgba(var(--accent), 0.2);
    transition: all 0.2s ease;
  }

  .post-card:hover .tag {
    background: rgba(var(--accent), 0.15);
    border-color: rgba(var(--accent), 0.3);
  }

  .read-more {
    color: rgb(var(--accent));
    font-size: 0.875rem;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
  }

  .read-more::after {
    content: '‚Üí';
    transition: transform 0.2s ease;
  }

  .post-card:hover .read-more::after {
    transform: translateX(3px);
  }

  @media (max-width: 768px) {
    .posts-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .post-link {
      padding: 1.25rem;
    }

    .post-title {
      font-size: 1.125rem;
    }
  }

  @media (max-width: 480px) {
    .post-link {
      padding: 1rem;
    }
  }
</style>
